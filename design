---
title: "Informing, simulating experience, or both: a field experiment on phishing risks"
author: "Martin Beaufils, Julien Cochet, François-Xavier Dyèvre"
institute: <span style="color:#000000">CPES - Université PSL</span>
output:
  xaringan::moon_reader:
    css: xaringan-themer.css
    lib_dir: libs
    nature:
      titleSlideClass: [top, left]
      ratio: '16:9'

---
class: animated slideInRight flipOutX
```{r xaringan-themer, include=FALSE}
library(xaringanthemer)
style_mono_accent(
  base_color = "#1c5253",
  header_font_google = google_font("Josefin Sans"),
  text_font_google   = google_font("Montserrat", "300", "300i"),
  code_font_google   = google_font("Fira Mono"),
    title_slide_background_image = knitr::include_graphics("https://www.economie.gouv.fr/files/files/directions_services/dgccrf/imgs/fiches_pratiques/2020/phishing.jpg"),
  title_slide_background_size = "40%",
  title_slide_background_position = "90% 80%",
)
```
```{r xaringan-logo, echo=FALSE}
xaringanExtra::use_logo(
  image_url = "https://upload.wikimedia.org/wikipedia/commons/4/44/LOGO-PSL-nov-2017.jpg"
)
```
```{r xaringan-animate-css, echo=FALSE}
xaringanExtra::use_animate_css()
```
```{r xaringan-tile-view, echo=FALSE}
xaringanExtra::use_tile_view()
```
```{r broadcast, echo=FALSE}
xaringanExtra::use_broadcast()
```
```{r xaringanExtra-clipboard, echo=FALSE}
htmltools::tagList(
  xaringanExtra::use_clipboard(
    button_text = "<i class=\"fa fa-clipboard\"></i>",
    success_text = "<i class=\"fa fa-check\" style=\"color: #90BE6D\"></i>",
    error_text = "<i class=\"fa fa-times-circle\" style=\"color: #F94144\"></i>"
  ),
  rmarkdown::html_dependency_font_awesome()
)
```
```{r xaringan-panelset, echo=FALSE}
xaringanExtra::use_panelset()
```

#Présentation de l'expérience

###*Informing, simulating experience, or both: a field experiment on phishing risks*
Aurélien Baillon, Jeroen de Bruin, Aysil Emirmahmutoglu, Evelien van de Veer, Bram van Dijk.
<br>
**Erasmus University Rotterdam**
<br>
PLOS One, décembre 2019
.right[![saw](https://media4.giphy.com/media/l2JdSx78cVNm0x8AM/source.gif)]

---
class: animated flipInX

```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
library(tidyverse)
```
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phishing <- read.csv("/Users/juliencochet/Desktop/L2/ECONOMIE/Recherche en économie/Mini-mémoire/Exp/phishing_dataset.csv")
data_phis_c <- data_phishing %>%
  filter(division == 'A' | division == 'B' | division == 'D' | division == 'E')
```
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phishing <- data_phishing %>%
  mutate(group = case_when(group == 1 ~ 'Control',
                   group == 2 ~ 'Info',
                   group == 3 ~ 'Exp',
                   group == 4 ~ 'ExpInfo'))
```

.pull-left[
<br>
<br>
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phishing %>%
  group_by(group) %>%
  summarise(nb_group = n())
```
]
.pull-right[
<br>
<br>
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phis_c %>%
  group_by(group) %>%
  summarise(nb_group = n())
```
]
---

"Most subjects were males (60,6%),with an average age of 47 years."
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo= FALSE}
data_phishing <- data_phishing %>%
  mutate(gender = ifelse(gender == 'M', 1, 0))
```
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phis_c <- data_phis_c %>%
  mutate(gender = ifelse(gender == 'M', 1, 0))
```

.pull-left[
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phishing %>%
  group_by(gender) %>%
  summarise(nb_obs = n())
```
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
moy_age = mean(data_phishing$age, na.rm = TRUE)
rep_sex = mean(data_phishing$gender, na.rm = TRUE)*100

moy_age
rep_sex
```
]

.pull-left[
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phis_c %>%
  group_by(gender) %>%
  summarise(nb_obs = n())
```
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
moy_age = mean(data_phis_c$age, na.rm = TRUE)
rep_sex = mean(data_phis_c$gender, na.rm = TRUE)*100

moy_age
rep_sex
```
]

---

#Répartition de l'âge
.pull-left[
```{r, eval = TRUE, message = FALSE, warning =  FALSE, fig.align="center", out.width = '80%'}
ggplot(data = data_phishing) +
  geom_boxplot(aes(x = as.character(group), y = age , color = as.character(group)))
```
]

.pull-right[
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo= FALSE, fig.align="center", out.width = '80%'}
ggplot(data = data_phis_c) +
  geom_boxplot(aes(x = as.character(group), y = age , color = as.character(group)))
```
]

---

#Répartition de l'âge
.pull-left[
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE, fig.align="center", out.width = '80%'}
ggplot(data = data_phishing) +
  geom_density(aes(x = age, color = division)) +
  facet_wrap(~ group, scales = "free")
```
]

.pull-right[
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE, fig.align="center", out.width = '80%'}
ggplot(data = data_phis_c) +
  geom_density(aes(x = age, color = division)) +
  facet_wrap(~ group, scales = "free")
```
]

---

```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phishing %>%
  group_by(group) %>%
  summarise(nb_obs = n(), mean_age = mean(age, na.rm = TRUE), sex_repartition = mean(gender, na.rm = TRUE)*100, mean_int_employee = mean(int_employee, na.rm = TRUE)*100,)
```

```{r, eval = TRUE, message = FALSE, warning =  FALSE}
data_phis_c %>%
  group_by(group) %>%
  summarise(nb_obs = n(), mean_age = mean(age, na.rm = TRUE), sex_repartition = mean(gender, na.rm = TRUE)*100, mean_int_employee = mean(int_employee, na.rm = TRUE)*100,)
```

---

```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
kruskal.test(age ~ group, data = data_phishing)
kruskal.test(gender ~ group, data = data_phishing)
kruskal.test(int_employee ~ group, data = data_phishing)
kruskal.test(division ~ group, data = data_phishing)
```

---

```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
kruskal.test(age ~ group, data = data_phis_c)
kruskal.test(gender ~ group, data = data_phis_c)
kruskal.test(int_employee ~ group, data = data_phis_c)
kruskal.test(division ~ group, data = data_phis_c)
```

---
class: animated zoomIn 


.panelset[
.panel[.panel-name[Données avec division c]
```{r, eval = TRUE, message = FALSE, warning =  FALSE, echo=FALSE}
data_phishing %>%
  group_by(group) %>%
  summarise(nb_obs = n(), mean_age = mean(age, na.rm = TRUE), sex_repartition = mean(gender, na.rm = TRUE)*100, mean_int_employee = mean(int_employee, na.rm = TRUE)*100,)
```
]
.panel[.panel-name[Données sans division c]
```{r, eval = TRUE, message = FALSE, warning =  FALSE,}
data_phis_c %>%
  group_by(group) %>%
  summarise(nb_obs = n(), mean_age = mean(age, na.rm = TRUE), sex_repartition = mean(gender, na.rm = TRUE)*100, mean_int_employee = mean(int_employee, na.rm = TRUE)*100,)
```
]
]

 
 
 
